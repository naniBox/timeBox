
build/timeBox.elf:     file format elf32-littlearm
build/timeBox.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000251

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00004dd0 memsz 0x00004dd0 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08004dd0 align 2**15
         filesz 0x0000000c memsz 0x0000000c flags rw-
    LOAD off    0x00010810 vaddr 0x20000810 paddr 0x08004ddc align 2**15
         filesz 0x00000000 memsz 0x00001084 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000c0  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004d10  080000c0  080000c0  000080c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  3 .data         0000000c  20000800  08004dd0  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00001084  20000810  08004ddc  00010810  2**3
                  ALLOC
  5 .debug_info   0000d914  00000000  00000000  0001080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002fbc  00000000  00000000  0001e120  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000ab0  00000000  00000000  000210dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000890  00000000  00000000  00021b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000054e9  00000000  00000000  0002241c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002656  00000000  00000000  00027905  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000070  00000000  00000000  00029f5b  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000031  00000000  00000000  00029fcb  2**0
                  CONTENTS, READONLY
 13 .debug_frame  00001b94  00000000  00000000  00029ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000023f8  00000000  00000000  0002bb90  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000c0 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000810 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
080000c4 l       .text	00000000 .udivsi3_skip_div0_test
08000164 l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v6m.c
080003fc l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008d0 l     O .bss	0000004c mainthread.4822
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000a50 l     F .text	00000022 fifo_remove
08000a80 l     F .text	00000020 dequeue
08000bd0 l     F .text	00000060 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000e50 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08001200 l     F .text	00000028 queue_insert
08001230 l     F .text	00000022 fifo_remove
08001260 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d5c l     O .bss	00000004 nextmem
20000d60 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 chheap.c
20000d68 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serial.c
08001970 l     F .text	00000024 write
080019a0 l     F .text	00000024 read
080019d0 l     F .text	00000030 put
08001a00 l     F .text	00000020 get
08001a20 l     F .text	00000030 putt
08001a50 l     F .text	00000020 gett
08001a70 l     F .text	00000024 writet
08001aa0 l     F .text	00000024 readt
08004b00 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 stm32_dma.c
20000d88 l     O .bss	00000004 dma_streams_mask
20000d8c l     O .bss	00000028 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
08002020 l     F .text	00000074 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 ext_lld_isr.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
080026e0 l     F .text	00000042 initgpio
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
20000df0 l     O .bss	00000002 dummytx
20000df2 l     O .bss	00000002 dummyrx
08002a20 l     F .text	000000cc spi_lld_serve_rx_interrupt
08002af0 l     F .text	00000018 spi_lld_serve_tx_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08004b60 l     O .text	00000010 default_config
08002d80 l     F .text	0000005c usart_init
08002de0 l     F .text	0000006c set_error
08002e50 l     F .text	00000104 serve_interrupt
08002f60 l     F .text	00000018 notify1
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chprintf.c
08003060 l     F .text	000000aa long_to_string_with_divisor
08003110 l     F .text	00000024 ltoa
00000000 l    df *ABS*	00000000 chrtclib.c
08003530 l     F .text	000001ba stm32_rtc_bcd2tm
080036f0 l     F .text	000001be stm32_rtc_tm2bcd
00000000 l    df *ABS*	00000000 main.c
20000800 l     O .data	0000000a DISPLAY_MAP
20000e70 l     O .bss	00000008 display_data
20000e78 l     O .bss	00000001 valid_timecode
20000e84 l     O .bss	00000014 display_off_vt
08004ce0 l     O .text	000000e0 extcfg
08003930 l     F .text	00000010 display_off
08004dc0 l     O .text	00000010 spicfg
20000e98 l     O .bss	000008b0 display_thread_wa
20001748 l     O .bss	00000004 display_thread
080039d0 l     F .text	00000274 display_run
20001750 l     O .bss	00000130 blink_thread_wa
08003cb0 l     F .text	00000054 blink_run
00000000 l    df *ABS*	00000000 ltc_time.c
20001880 l     O .bss	00000001 was_last_edge_short
20001884 l     O .bss	0000000a ltc_frame
20001890 l     O .bss	00000004 ltc_timecode
08003e80 l     F .text	000000aa frame_to_time
08003f30 l     F .text	000000e8 ltc_store
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 chregistry.c
08004b70 g     O .text	0000008c pal_default_config
08002240 g     F .text	00000060 Vector58
08000310  w    F .text	00000002 Vector9C
08000460 g     F .text	00000080 nvicEnableVector
08000720 g     F .text	00000030 dbg_check_lock_from_isr
08002f80 g     F .text	00000028 VectorAC
08001070 g     F .text	00000018 chThdExit
080005f0 g     F .text	0000009c chSysTimerHandlerI
08001130 g     F .text	00000054 chEvtBroadcastFlagsI
08000c30 g     F .text	00000064 chSchGoSleepTimeoutS
080006c0 g     F .text	00000030 dbg_check_lock
080022a0 g     F .text	00000150 Vector5C
08002510 g     F .text	00000150 ext_lld_channel_enable
08002cc0 g     F .text	00000020 spi_lld_select
08000360 g     F .text	00000010 NMIVector
20000e80 g     O .bss	00000001 btn_1_pressed
080038b0 g     F .text	00000036 rtcGetTimeTm
08000f10 g     F .text	0000002c _thread_memfill
080018f0 g     F .text	0000003c rtcSetTime
08001ee0 g     F .text	00000054 dmaInit
08000310  w    F .text	00000002 Vector8C
08000000 g     O startup	000000c0 _vectors
08000b50 g     F .text	0000007c chSchGoSleepS
20000db4 g     O .bss	00000008 EXTD1
20001894 g       *ABS*	00000000 __heap_base__
08004dd0 g       *ABS*	00000000 _etext
08000f40 g     F .text	00000074 chThdCreateI
08000690 g     F .text	00000028 dbg_check_enable
08002ce0 g     F .text	00000020 spi_lld_unselect
08000ca0 g     F .text	0000007c chSchWakeupS
08002470 g     F .text	0000002c ext_lld_exti_irq_enable
08001ba0 g     F .text	00000064 sdIncomingDataI
080015d0 g     F .text	00000092 chOQGetI
08000aa0 g     F .text	00000028 _scheduler_init
08000fc0 g     F .text	00000064 chThdCreateStatic
08000310  w    F .text	00000002 Vector94
08000310  w    F .text	00000002 VectorA8
08004100 g     F .text	00000144 memcpy
08000310  w    F .text	00000002 VectorB4
08003d10 g     F .text	00000044 changeToSPI
20000dbc g     O .bss	00000004 RTCD1
08000ad0 g     F .text	00000074 chSchReadyI
080000c0 g       startup	00000000 __fini_array_end
08000320  w    F .text	00000006 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000910 g     F .text	00000024 _vt_init
080017a0 g     F .text	00000050 chCoreAllocI
080000c0 g     F .text	00000088 __udivsi3
080017f0 g     F .text	0000002c _heap_init
08000310  w    F .text	00000002 Vector74
08001820 g     F .text	00000028 halInit
20000810 g       .bss	00000000 _bss_start
08000d20 g     F .text	0000006c chSchDoRescheduleBehind
08000310  w    F .text	00000002 UsageFaultVector
20002000 g       *ABS*	00000000 __heap_end__
08000310  w    F .text	00000002 DebugMonitorVector
080006f0 g     F .text	00000030 dbg_check_unlock
08000310  w    F .text	00000002 Vector40
08001930 g     F .text	0000003c rtcGetTime
08000250 g     F .text	000000c0 ResetHandler
08001420 g     F .text	000000c4 chIQReadTimeout
08000310  w    F .text	00000002 VectorBC
08001880 g     F .text	00000060 extStart
080020a0 g     F .text	00000060 hal_lld_init
08002b10 g     F .text	00000050 spi_lld_init
08001090 g     F .text	00000070 chThdExitS
080018e0 g     F .text	00000008 rtcInit
08001860 g     F .text	00000014 extObjectInit
08003c50 g     F .text	00000060 setLTC
08001d00 g     F .text	00000064 spiStartSend
20000924 g     O .bss	00000408 dbg_trace_buffer
08000310  w    F .text	00000002 PendSVVector
08000940 g     F .text	000000a0 chVTSetI
08001d70 g     F .text	0000004c Vector64
20001894 g       .bss	00000000 _bss_end
20000d2c g     O .bss	00000004 dbg_panic_msg
08000240  w    F .text	00000002 _default_exit
080027b0 g     F .text	0000012c _pal_lld_setgroupmode
08002fb0 g     F .text	00000030 sd_lld_init
080021e0 g     F .text	00000060 Vector54
08000310  w    F .text	00000002 Vector98
080038f0 g     F .text	00000036 rtcSetTimeTm
08004020 g     F .text	00000084 ltc_exti_cb
08000310  w    F .text	00000002 Vector24
08000800 g     F .text	00000028 chDbgCheckClassI
08002b60 g     F .text	00000158 spi_lld_start
08000e30 g     F .text	00000020 chSchDoReschedule
08000550 g     F .text	00000094 chSysInit
08001030 g     F .text	00000034 chThdSleep
080012a0 g     F .text	0000004e chIQInit
08000160 g     F .text	00000000 __aeabi_idiv
08004b20 g     O .text	0000003c _stm32_dma_streams
08000310  w    F .text	00000002 Vector84
08001850 g     F .text	00000008 extInit
08000330 g     F .text	0000002c SysTickVector
08001c20 g     F .text	00000026 spiObjectInit
20000dc0 g     O .bss	00000030 SPID1
2000091c g     O .bss	00000004 dbg_isr_cnt
08002100 g     F .text	000000d4 stm32_clock_init
08002730 g     F .text	00000074 _pal_lld_init
080039b0 g     F .text	00000012 spi_end_cb
08001ad0 g     F .text	00000008 sdInit
08000310  w    F .text	00000002 BusFaultVector
08001740 g     F .text	0000002c _core_init
08001b40 g     F .text	00000058 sdStart
080024a0 g     F .text	00000010 ext_lld_init
08000410 g     F .text	00000026 _port_switch
00002000 g       *ABS*	00000000 __ram_size__
08000310  w    F .text	00000002 SVCallVector
08000230  w    F .text	00000002 __late_init
080008f0 g     F .text	00000018 chDbgPanic
20000d30 g     O .bss	00000010 vtlist
08000310  w    F .text	00000002 HardFaultVector
08000370 g     F .text	00000074 _port_irq_epilogue
08001770 g     F .text	00000026 chCoreAlloc
08000830 g     F .text	00000028 chDbgCheckClassS
08000220  w    F .text	00000002 __aeabi_ldiv0
080007c0 g     F .text	00000038 dbg_check_leave_isr
08004dd0 g       *ABS*	00000000 _textdata
00000000 g       *ABS*	00000000 _text
08000310  w    F .text	00000002 MemManageVector
080000c0 g       startup	00000000 __fini_array_start
08004250 g     F .text	00000116 memset
08003d60 g     F .text	00000114 main
08001e50 g     F .text	0000008c Vector6C
08003940 g     F .text	00000070 btn_1_exti_cb
20000d40 g     O .bss	0000001c rlist
08000310  w    F .text	00000002 VectorA0
080024b0 g     F .text	00000052 ext_lld_start
08001c10 g     F .text	00000008 spiInit
080000c0 g     F .text	00000000 __aeabi_uidiv
08000780 g     F .text	00000038 dbg_check_enter_isr
080000c0 g       startup	00000000 __init_array_end
08000310  w    F .text	00000002 Vector7C
080040b0 g     F .text	00000050 kuroBoxTimeInit
08001100 g     F .text	00000030 chMtxInit
08000530 g     F .text	00000018 _idle_thread
08001670 g     F .text	000000c4 chOQWriteTimeout
08000160 g     F .text	000000ac __divsi3
08000310  w    F .text	00000002 VectorB0
08004ae0 g     O .text	00000016 ch_debug
08003140 g     F .text	000003ec chprintf
08000310  w    F .text	00000002 Vector90
08001190 g     F .text	00000070 chEvtSignalI
20000920 g     O .bss	00000004 dbg_lock_cnt
08002660 g     F .text	00000078 ext_lld_channel_disable
20000000 g       *ABS*	00000000 __ram_start__
080029f0 g     F .text	00000030 rtc_lld_get_time
08000440 g     F .text	00000012 _port_thread_start
08000310  w    F .text	00000002 Vector60
08000310  w    F .text	00000002 Vector1C
08000d90 g     F .text	00000098 chSchDoRescheduleAhead
08002430 g     F .text	0000003c Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08000310  w    F .text	00000002 Vector70
080004e0 g     F .text	0000004c nvicSetSystemHandlerPriority
08002d00 g     F .text	0000007c spi_lld_send
20000810 g     O .bss	000000c0 _idle_thread_wa
080014f0 g     F .text	0000004e chOQInit
08001390 g     F .text	0000008e chIQGetTimeout
20000800 g       .data	00000000 _data
08000310  w    F .text	00000002 Vector4C
08000310  w    F .text	00000002 Vector80
080012f0 g     F .text	00000096 chIQPutI
080003f0 g     F .text	0000001c _port_switch_from_isr
08001dc0 g     F .text	0000008c Vector68
08002970 g     F .text	0000007c rtc_lld_set_time
08000860 g     F .text	00000018 _trace_init
08001cb0 g     F .text	00000044 spiSelect
20000400 g       .stacks	00000000 __main_stack_end__
08000148 g     F .text	00000012 __aeabi_uidivmod
08000310  w    F .text	00000002 Vector78
20002000 g       *ABS*	00000000 __ram_end__
2000080c g       .data	00000000 _edata
20001894 g       *ABS*	00000000 _end
20000e7c g     O .bss	00000004 linear_timecode
080009e0 g     F .text	00000070 chVTResetI
08000310 g     F .text	00000002 _unhandled_exception
08001ae0 g     F .text	00000060 sdObjectInit
08000310  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000880 g     F .text	00000064 dbg_trace
08000220  w    F .text	00000002 __aeabi_idiv0
080000c0 g       startup	00000000 __init_array_start
08001c50 g     F .text	00000060 spiStart
20000df4 g     O .bss	0000007c SD1
08000e70 g     F .text	0000009c _thread_init
08000310  w    F .text	00000002 Vector50
08001f40 g     F .text	000000dc dmaStreamAllocate
080028e0 g     F .text	00000090 rtc_lld_init
08001540 g     F .text	00000090 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080023f0 g     F .text	0000003c Vector44
08000310  w    F .text	00000002 Vector28
08003050 g     F .text	00000002 boardInit
08000310  w    F .text	00000002 VectorB8
08002fe0 g     F .text	00000054 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000750 g     F .text	00000030 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000310  w    F .text	00000002 Vector34
0800020c g     F .text	00000012 __aeabi_idivmod
08003040 g     F .text	00000008 __early_init
08000310  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
08000310  w    F .text	00000002 Vector20


